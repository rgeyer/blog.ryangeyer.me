[{"categories":["Ender 3"],"contents":"After the recent upgrades to my Ender 3, I\u0026rsquo;ve been happily printing PLA on my new spring steel bed for some time. Now tho, I wanted to switch back to my glass bed and print some PETG.\nIn attempting to print, I\u0026rsquo;ve had the same model fail twice!\nBoth times, it was a \u0026ldquo;THERMAL RUNAWAY PROTECTION\u0026rdquo; error. This is where the firmware of the machine monitors the amount of power it\u0026rsquo;s sending to the heaters, and measures the current temperature (relative to the desired temp), and if it thinks something is wrong, it\u0026rsquo;ll shut the machine off rather than burn down your house. Pretty handy, really.\nOn the first failure, I assumed it was because I hadn\u0026rsquo;t tweaked the filament profile to reduce my fan speed as I discussed here in my previous post.\nAnother print test, with the fans actually off, showed that this wasn\u0026rsquo;t the case.\nSo, it was time to PID tune both the bed, and extruder heaters. However, this also didn\u0026rsquo;t seem to help.\nForensics Okay, now I figure it\u0026rsquo;s time to track the actual value(s) of these things before I start making more changes to my thermal runaway heuristics.\nI found a plugin for exposing desired vs. actual temps and fan speeds to Prometheus - Prometheus-Exporter, but it lacks the ability to report on the current PWM power used for either heater.\nWhat I want to see is if when a fan kicks on, the temp drops, and the power used to power a heater goes up.\nNaturally, my only choice was to modify the code in my own fork.\nNow I have my Grafana dashboard ready, and I can watch it in realtime, and see what\u0026rsquo;s happening.\nI still haven\u0026rsquo;t resolved the issue, but this should give me the tools I need to track it down.\n","permalink":"https://blog.ryangeyer.me/blog/ender3-thermalrunaway-troubleshooting/","tags":null,"title":"Ender 3 Thermal Runaway Troubleshooting"},{"categories":["Ender 3","Projects"],"contents":"Having completed the mechanical assembly on my Ender 3, it was time to move on to getting all of the electronics dialed in, and tuned.\nMarlin Firmware The first step was to get the latest-and-greatest version of Marlin 2.0 and add my configuration. Since I intended to run the inductive/PINDA type bed leveling probe, that meant some changes to my configuration. As fate would have it, I\u0026rsquo;d go back to my BLTouch (more on that later).\nI maintain my own branch of Marlin for this printer, to keep track of my changes, which you can find on github.\nI won\u0026rsquo;t bore you with the details of getting PlatformIO setup since there are very thorough directions available directly from them. Suffice to say, you\u0026rsquo;ll need it installed in order to compile a custom firmware.\nI have been using the CLI of PlatformIO for some time for various Arduino projects, and I have it installed in a non-standard location. So for me, it\u0026rsquo;s as simple as running ~/.platformio/penv/bin/pio run.\nThat will build my firmware bin file. Now, how to upload it to the printer? It had been so long since I\u0026rsquo;d worked on this machine that I\u0026rsquo;d completely forgotten how it works. I tried connecting over USB, and using OctoPrint firmware updating plugins, all without success.\nBefore too long, I realized that all I had to do was drop my firmware binary onto an SD card, and make sure that SD card was inserted into my SKR 1.3 when it booted up.\nThat meant cp.pio/build/LPC1768/firmware.bin at /path/to/sdcard/, then unmounting the SD card, and putting it in the control board.\nAuto Bed Leveling Ultimately, the step took A LOT of time, and I ended up reverting to my previous BLTouch configuration. I\u0026rsquo;ll elaborate on this, but first, let\u0026rsquo;s talk about my attempts to get the inductive sensor to work.\nWhat didn\u0026rsquo;t work I had bought a generic inductive proximity sensor. This LJ18A3-8-Z/BX to be precise. It\u0026rsquo;s a NPN NO sensor, which is meant to operate at between 6 and 36V, with an approximate sensing distance of 8mm.\nGiven that the Ender 3 runs a 24v power supply, and my SKR 1.3 controller board is only able to tolerate 5v on it\u0026rsquo;s z-min GPIO pin, some wiring needed to be done in order to make everything operate at it\u0026rsquo;s appropriate voltages.\nI\u0026rsquo;ll spare you all the technical details, but basically what I needed was to power the sensor directly off of the 24v power supply, and use a voltage divider on the sensor pin to drop it down to a safe voltage for the controller board. I more-or-less followed the excellent guidance found in this blog post.\nThe result was this simple circuit, which I threw together onto a piece of perfboard.\n         Previous   Next   Proud of myself for wiring this up, and quickly bench-testing to see that it did properly trigger the sensor when it came into proximity with metal, I buttoned up the whole machine, ready to move on to tuning.\nUnfortunately, when I finally dialed in my z offset, and tried my first test print, I found that the bed leveling seemed WAY off. It was digging into the build plate on the left and right sides, and was not anywhere NEAR the bed in the center.\nI\u0026rsquo;d be lying if I told you I didn\u0026rsquo;t spend several hours trying to troubleshoot this, but ultimately, I simply installed Bed Visualizer on my OctoPrint server, and pretty quickly saw the issue.\nWith the inductive sensor, the firmware thought my bed looked like this.\nWhen in reality, it looked like this.\nSomething was clearly wrong. Rather than spend another eternity trying to figure out why it\u0026rsquo;s mis-reading the shape of the bed, I made the decision to go back to my BLTouch. I had opted-out of using it because the pin had gotten bent and a little mangled in the past, and I thought this meant I had to replace the whole sensor. Imagine my surprise when I discovered that I could just order a new pin!\nOnce I printed a new part, tweaked the firmware, and got the BLTouch mounted, this was the resulting mesh.\nOkay! That\u0026rsquo;s out of the way, tuning time!\nTuning There\u0026rsquo;s not a TON of interesting stuff here, but it is necessary after all of these changes, to make sure things are dialed in and working.\nPID I enabled PID autotuning via the LCD in my Marlin firmware, so I could very easily do this right away using these instructions.\nThat said, there are a couple factors which were important.\n I cranked the cooling fan(s) up to 100% I tuned for 225C since I do lots of PETG, so this is roughly between my PLA and PETG printing temps.  Slicer The HMG5 has DRAMATICALLY increased cooling capabilities, so I needed to adjust my slicer to allow lower fan speeds. It was set at min and max of 100% fan speed due to my old cooling setup. I set the minimum to 20%.\nAlso of note, is that I PID tuned with the cooling fans fully on. Even though the fan ducts aren\u0026rsquo;t directed to the heater block, when the fans are at full speed, it impacts the ability for the heater block to warm up. When I did my first test prints, I kept getting thermal runaway errors!\nE-Steps I followed these steps to dial in my e-steps.\nThat said, I had the right value set in my firmware config from the last time I had tuned, and the value remained the same. Namely 99.00.\nZ-Offset I also enabled the z-offset wizard in my firmware. This is a great feature, and I followed the excellent video instructions from TeachingTech to use it (tho the steps are super easy).\nAfter using the wizard, with the BLTouch, I found that no baby z stepping was required to further tune my z-offset, a huge bonus!\nTake a look at this first layer!\nLinear Acceleration After getting a good first layer print, I did print a benchy. While the corners could use a little tuning, I was happy enough with them that I decided to forego linear acceleration tuning for the time being.\nI did still have my old value in my firmware config and it seems adequate for now. I\u0026rsquo;ll save fine tuning it for another day.\nVictory Print With everything dialed in, it was time to print something useful as a victory lap.\nA friend asked me to print this model of a Google Android meant to hold a Google Home or Nest Mini, and it seemed like a perfectly appropriate choice for a victory print.\n       Previous   Next   ","permalink":"https://blog.ryangeyer.me/blog/ender3-electronics-firmware-tuning/","tags":null,"title":"Ender3 Upgrade Pt.3 (Electronics, Firmware, and Tuning)"},{"categories":["Ender 3","Projects"],"contents":"Coming off of my plans to upgrade and tune my Ender 3, I started to work on printing the new hot-end mount and cooling system in the form of the excellent Hero Me Gen5.\nHero Me Gen 5 As I also mentioned in that post, I decided to bring my customizations and build up-to-date with a new direct drive mount from PrinterMods, namely the MDD v1.3.\nWith that in mind, I scoured the very thorough documentation, and watched the assembly video from TeachingTech, at which point I put together the list of parts I needed to print for my combination of components.\nHMG5 Parts List;\n PM_v1.3_CR-Ender-E3D-Gantry_Adapter_5B.stl PM_Gantry_Clip_5.stl Hero_Me_Gen5_Base_3.stl HMG5_E3D_V6-Clone_Collar.stl HMG5_E3D_V6-Clone_Air_Dam.stl 5015_Lightweight_Duct_Standard_Right.stl 5015_Lightweight_Duct_Standard_Left.stl EZABL_Mount_Medium_18mm.stl DD Adapters? Pg. 9 of assembly guide  Notice the last bullet? Well, I\u0026rsquo;m using the OEM Extruder, so the only apparent match was the PM_OEM_Extruder_adapter.stl. I would discover later, when attempting to assemble my new parts, that this is NOT compatible with the MDD v1.3, which apparently moved the DD extruder mounting points a couple mm closer to the hotend.\nAfter some quick searching, it didn\u0026rsquo;t appear as though anyone else had solved this problem, tho a handful of comments did appear on the original thingiverse posting for the HMG5. Rather than wait for a solution from the original designer, or the community, I went ahead and designed my own mount which you can find as a remix on thingiverse.\n     Previous   Next   X Gantry While assembling all of this, it became clear to me that the left and right sides of the X gantry were not level! This almost certainly would have contributed to the bed leveling and first layer adhesion problems I was having!\nI measured from the X gantry to the top of the frame, and discovered that the right side (the PSU side, furthest from the Z axis screw) was nearly 1cm HIGHER than the left side. I have no idea how this would have happened, and my expectation is that if anything the right side would \u0026ldquo;sag\u0026rdquo; since it isn\u0026rsquo;t directly supported by a Z screw.\nA quick run through the steps in this excellent video got things squared back up and close enough to equal that I can\u0026rsquo;t detect a difference with the naked eye.\nPEI Spring Sheet \u0026amp; solid bed mounts The final step was to replace the bed leveling springs with solid mounts, and install a new magnetic sheet for a PEI spring sheet.\nI removed my glass sheet, and the original magnet on the heated bed. This made way to install the new magnetic sheet, and stick the PEI spring sheet on top of that.\nI will still be printing with either the glass, or this new spring sheet, depending on the models and materials I print. I intend to setup different slicer profiles with different z offsets to accommodate for this. More on that in a future post.\n    Previous   Next   Next steps That covers all of the mechanical upgrades that I had planned. You may notice in the pictures that the wires are a bit of a disaster. This is intentional, since I\u0026rsquo;m going to tidy those up, and get the wiring for the inductive ABL sensor dialed in as another installment of this series of blog posts. So, keep your eyes peeled here!\n","permalink":"https://blog.ryangeyer.me/blog/ender3-hero-me-gen5-upgrade/","tags":null,"title":"Ender 3 Upgrades Pt. 2 (Hero Me Gen5 \u0026 PEI Spring Sheet)"},{"categories":["Ender 3","Projects"],"contents":"Humble beginnings If I\u0026rsquo;m honest, it\u0026rsquo;s been so long since I printed with my Ender 3 that I don\u0026rsquo;t really remember what sort of issues or failures it was suffering from.\nI think that I was having some bed adhesion issues, and I\u0026rsquo;ve always had lackluster cooling on this machine. So after it has been sitting idle for over 6mo while my Prusa MK3s has been busy being a workhorse, it\u0026rsquo;s time to work out the bugs and get the Ender 3 printing again.\nWhen I first got it on the bench, I had a clear idea of what I wanted to accomplish. I wanted to replace my bed leveling springs with solid mounts, add a magnetic removable PEI sheet bed, and swap out my BLTouch for an 18mm inductive (PINDA style) probe for auto bed leveling (ABL).\nI had begun to suspect the BLTouch\u0026rsquo;s accuracy ever since I had a particularly messy failed print, that actually bent the probe! I did manage to clean it up, and bend it back, and things seemed to be working just fine. I was just never as confident that it was doing it\u0026rsquo;s job.\nFeature creep In order to mount the new probe, I needed to print a new mount for it. \u0026ldquo;No big deal!\u0026rdquo; I said to myself. Except, that\u0026rsquo;s never how it turns out.\nYou see, my Ender 3 already has a few modifications on it. Namely, I have a genuine E3D V6 HotEnd, and an early Basaraba direct drive gantry plate. I hold the whole thing together with some 3D printed mounts from the designer of the Hero Me modular hot end cooling system. This particular combination has worked very well for me, but as I was about to find out, it\u0026rsquo;s become completely outdated by new designs and options.\nIf I wanted to switch to the new probe, it wouldn\u0026rsquo;t fit \u0026ldquo;under\u0026rdquo; the direct drive extruder anymore since it\u0026rsquo;s quite a tall sensor. All of the available options for 3D printable mounts and cooling options no longer supported my directdrive gantry plate anymore either!\nSo I decided I\u0026rsquo;d go ahead with printing the full Hero Me Gen5, with dual 5015 cooling fans. This meant also upgrading my gantry plate to something which would be compatible. In looking over all my parts to make sure I had a complete BOM, I realized that this entire time I\u0026rsquo;ve ALSO been running a 12v 5015 part cooling fan on my 24v powersupply, and that the Hero Me Gen5 requires a 4020 fan for the hotend rather than the 30mm fan that the E3D V6 already uses!\nFinal task list With all of that sorted, here\u0026rsquo;s everything that will be included in this project.\nIn this post I\u0026rsquo;ll be upgrading the following;\n Install a PEI magnetic removable print surface Hero Me Gen5 HotEnd cooling system w/ dual 5015 parts cooling fans. 18mm Industrial Inductive ABL sensor PrinterMods (Basaraba\u0026rsquo;s new \u0026ldquo;official\u0026rdquo; store) Modular DirectDrive (MDD) v1.3 gantry plate PrinterMods Aluminum Extruder parts Update Marlin firmware (Re)Calibrate  HotEnd PID Linear acceleration E steps    The work begins After encountering all of the feature creep, I ordered parts, and started printing the Hero Me Gen5 parts, which means I have a few days to wait until I can dive in and really get my hands dirty. Stay tuned here for updates and I\u0026rsquo;ll break down each of these tasks.\n","permalink":"https://blog.ryangeyer.me/blog/ender3-upgrade-pt1/","tags":null,"title":"Ender 3 Upgrades Pt. 1"},{"categories":null,"contents":null,"permalink":"https://blog.ryangeyer.me/","tags":null,"title":"Ryan Geyer"},{"categories":null,"contents":null,"permalink":"https://blog.ryangeyer.me/blog/","tags":null,"title":"Latest News"}]